<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>int core1_t = 1;
int core2_t = 0;

const int task1_period = 5;
const int task2_period = 8;

const int task1_burstTime = 2;
const int task2_burstTime = 3;

int task1_interruptedTime = 0;
int task2_interruptedTime = 0;

int core1_readyQueue[4] = {0, 0, 0, 0};

int task1_t = 0;
int task2_t = 0;


void replaceCurrentlyExecutingTaskWith(int taskNum){

    //remove the new task from the ready queue because you're now executing it

    if(taskNum == 1){
        
        task2_interruptedTime = task2_t;
        core1_t = core1_t + task2_t;
        core1_readyQueue[1] = 1;
        core1_readyQueue[0] = 0;

    } else if(taskNum == 2){
        
        task1_interruptedTime = task1_t;
        core1_t = core1_t + task1_t;
        core1_readyQueue[0] = 1;
        core1_readyQueue[1] = 0;    

    }

}

void concludeTaskExecution(int taskNum){

    if(taskNum == 1){

        task1_t = 0;
        core1_t = core1_t + (task1_burstTime - task1_interruptedTime);
        task1_interruptedTime = 0;    
        core1_readyQueue[0] = 0;
        

    } else if(taskNum == 2){

        task2_t = 0;
        core1_t = core1_t + (task2_burstTime - task2_interruptedTime);
        task2_interruptedTime = 0;
        core1_readyQueue[1] = 0;
    
    }
   

}


int findTaskInReadyQueue(){
    
    int i = 0;
    for(i : int[0, 3]){

        if(core1_readyQueue[i] == 1){
            return i + 1;
        }

    }

    return -1;

}


int preempt(int currentlyExecutingTask){

    int i;

    if(currentlyExecutingTask == 1){
        i = core1_t + task1_t;
    } else if(currentlyExecutingTask == 2) {
        i = core1_t + task2_t;
    }

    while(true){

        i = i + 1;

        if(i % task1_period == 0){

            return 1;

        } else if(i % task2_period == 0){

            return 2;
        
        }

    }

    return -1;

}




</declaration>
	<template>
		<name>Task2</name>
		<parameter>urgent chan &amp;execute_task1, urgent chan &amp;execute_task2, urgent chan &amp;goBackInReadyQueue_task2, urgent chan &amp;task1_executed, urgent chan &amp;task2_executed, urgent chan &amp;task1_arrived</parameter>
		<location id="id0" x="-42" y="-85">
			<name x="-110" y="-68">Executing</name>
		</location>
		<location id="id1" x="-646" y="-42">
			<name x="-748" y="-76">Adding_task1_toReadyQueue</name>
		</location>
		<location id="id2" x="-42" y="34">
			<name x="-84" y="51">Reset_clock</name>
		</location>
		<location id="id3" x="-42" y="-229">
			<name x="-52" y="-263">Ready</name>
		</location>
		<location id="id4" x="-510" y="-178">
			<name x="-731" y="-204">waiting_toResume_execution</name>
		</location>
		<init ref="id3"/>
		<transition id="id5">
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="76" y="-255">task2_executed?</label>
			<nail x="153" y="-229"/>
		</transition>
		<transition id="id6">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="-510" y="-229">findTaskInReadyQueue() == 2</label>
			<nail x="-425" y="-204"/>
			<nail x="-374" y="-204"/>
		</transition>
		<transition id="id7">
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="-399" y="-170">task1_t == task1_burstTime</label>
			<label kind="synchronisation" x="-314" y="-136">task1_executed!</label>
			<label kind="assignment" x="-374" y="-153">concludeTaskExecution(1)</label>
		</transition>
		<transition id="id8">
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="-629" y="-170">preempt(2) == 1</label>
			<label kind="synchronisation" x="-637" y="-153">execute_task1!</label>
			<label kind="assignment" x="-722" y="-136">replaceCurrentlyExecutingTaskWith(1)</label>
		</transition>
		<transition id="id9">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-365" y="-60">preempt(2) == 2</label>
			<nail x="-331" y="-34"/>
		</transition>
		<transition id="id10">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-603" y="-93">(core1_t + task2_t) % task1_period == 0 &amp;&amp; findTaskInReadyQueue() != 1 &amp;&amp; task2_t &lt; task2_burstTime</label>
			<label kind="assignment" x="-425" y="-102">core1_readyQueue[0] = 1</label>
			<nail x="-323" y="-102"/>
		</transition>
		<transition id="id11">
			<source ref="id2"/>
			<target ref="id3"/>
			<nail x="-807" y="34"/>
			<nail x="-807" y="-229"/>
		</transition>
		<transition id="id12">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-102" y="-195">execute_task2?</label>
		</transition>
		<transition id="id13">
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-187" y="-17">task2_t &gt;= task2_burstTime</label>
			<label kind="synchronisation" x="-170" y="-34">task2_executed!</label>
			<label kind="assignment" x="-144" y="0">concludeTaskExecution(2)</label>
		</transition>
		<transition id="id14">
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="26" y="-102">task2_t &lt; task2_burstTime &amp;&amp; !((core1_t + task2_t) % task1_period == 0 &amp;&amp; findTaskInReadyQueue() != 1)</label>
			<label kind="assignment" x="26" y="-127">task2_t++</label>
			<nail x="9" y="-59"/>
			<nail x="9" y="-136"/>
		</transition>
	</template>
	<template>
		<name>Core2</name>
		<parameter>urgent chan &amp;execute_task1, urgent chan &amp;execute_task2, urgent chan &amp;goBackInReadyQueue_task1, urgent chan &amp;goBackInReadyQueue_task2, urgent chan &amp;task1_executed, urgent chan &amp;task2_executed, urgent chan &amp;task1_arrived, urgent chan &amp;task2_arrived</parameter>
		<location id="id15" x="-153" y="102">
			<name x="-204" y="118">Executing_task1</name>
		</location>
		<location id="id16" x="102" y="-25">
			<name x="68" y="-59">Idle</name>
		</location>
		<location id="id17" x="102" y="94">
			<name x="60" y="111">Reset_clock</name>
		</location>
		<location id="id18" x="-42" y="-50">
		</location>
		<init ref="id18"/>
		<transition id="id19">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-306" y="35">task2_executed?</label>
			<label kind="assignment" x="-297" y="-50">core2_t = core2_t + 2</label>
			<nail x="-204" y="-25"/>
		</transition>
		<transition id="id20">
			<source ref="id17"/>
			<target ref="id16"/>
			<nail x="85" y="26"/>
		</transition>
		<transition id="id21">
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-76" y="60">core2_t % 6 == 0</label>
			<label kind="synchronisation" x="-102" y="18">execute_task2!</label>
		</transition>
		<transition id="id22">
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="111" y="26">core2_t &gt;= 25</label>
			<label kind="assignment" x="119" y="52">core2_t = 0</label>
		</transition>
		<transition id="id23">
			<source ref="id16"/>
			<target ref="id16"/>
			<label kind="guard" x="170" y="-42">core2_t &lt; 25 &amp;&amp; core2_t % 6 != 0</label>
			<label kind="assignment" x="170" y="-67">core2_t = core2_t + 1</label>
			<nail x="153" y="1"/>
			<nail x="153" y="-76"/>
		</transition>
		<transition id="id24">
			<source ref="id18"/>
			<target ref="id16"/>
		</transition>
	</template>
	<template>
		<name>Task1</name>
		<parameter>urgent chan &amp;execute_task1, urgent chan &amp;execute_task2, urgent chan &amp;goBackInReadyQueue_task1, urgent chan &amp;task1_executed, urgent chan &amp;task2_executed, urgent chan &amp;task2_arrived</parameter>
		<location id="id25" x="-221" y="-34">
			<name x="-263" y="-17">Reset_clock</name>
		</location>
		<location id="id26" x="-221" y="-153">
			<name x="-289" y="-136">Executing</name>
		</location>
		<location id="id27" x="-221" y="-297">
			<name x="-231" y="-331">Ready</name>
		</location>
		<location id="id28" x="-731" y="-102">
			<name x="-867" y="-136">Adding_task2_toReadyQueue</name>
		</location>
		<location id="id29" x="-654" y="-246">
			<name x="-875" y="-263">waiting_toResume_execution</name>
		</location>
		<init ref="id27"/>
		<transition id="id30">
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-68" y="-323">task1_executed?</label>
			<nail x="0" y="-297"/>
		</transition>
		<transition id="id31">
			<source ref="id29"/>
			<target ref="id26"/>
			<label kind="guard" x="-535" y="-238">task2_t == task2_burstTime</label>
			<label kind="synchronisation" x="-450" y="-204">task2_executed!</label>
			<label kind="assignment" x="-459" y="-221">concludeTaskExecution(2)</label>
		</transition>
		<transition id="id32">
			<source ref="id29"/>
			<target ref="id29"/>
			<label kind="guard" x="-705" y="-297">findTaskInReadyQueue() == 1</label>
			<nail x="-603" y="-272"/>
			<nail x="-518" y="-272"/>
		</transition>
		<transition id="id33">
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="guard" x="-748" y="-229">preempt(1) == 2</label>
			<label kind="synchronisation" x="-739" y="-212">execute_task2!</label>
			<label kind="assignment" x="-833" y="-195">replaceCurrentlyExecutingTaskWith(2)</label>
		</transition>
		<transition id="id34">
			<source ref="id28"/>
			<target ref="id26"/>
			<label kind="guard" x="-510" y="-128">preempt(1) == 1</label>
			<nail x="-476" y="-102"/>
		</transition>
		<transition id="id35">
			<source ref="id26"/>
			<target ref="id28"/>
			<label kind="guard" x="-816" y="-153">(core1_t + task1_t) % task2_period == 0 &amp;&amp; findTaskInReadyQueue() != 2 &amp;&amp; task1_t &lt; task1_burstTime</label>
			<label kind="assignment" x="-552" y="-161">core1_readyQueue[1] = 1</label>
			<nail x="-476" y="-170"/>
		</transition>
		<transition id="id36">
			<source ref="id25"/>
			<target ref="id27"/>
			<nail x="-909" y="-34"/>
			<nail x="-909" y="-297"/>
		</transition>
		<transition id="id37">
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-263" y="-263">execute_task1?</label>
		</transition>
		<transition id="id38">
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="guard" x="-348" y="-93">task1_t &gt;= task1_burstTime</label>
			<label kind="synchronisation" x="-280" y="-110">task1_executed!</label>
			<label kind="assignment" x="-314" y="-76">concludeTaskExecution(1)</label>
		</transition>
		<transition id="id39">
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="guard" x="-153" y="-170">task1_t &lt; task1_burstTime &amp;&amp; !((core1_t + task1_t) % task2_period == 0 &amp;&amp; findTaskInReadyQueue() != 2)</label>
			<label kind="assignment" x="-153" y="-195">task1_t++</label>
			<nail x="-170" y="-127"/>
			<nail x="-170" y="-204"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Core1</name>
		<parameter>urgent chan &amp;execute_task1, urgent chan &amp;execute_task2, urgent chan &amp;goBackInReadyQueue_task1, urgent chan &amp;goBackInReadyQueue_task2, urgent chan &amp;task1_executed, urgent chan &amp;task2_executed, urgent chan &amp;task1_arrived, urgent chan &amp;task2_arrived</parameter>
		<declaration>// Place local declarations here.

</declaration>
		<location id="id40" x="-595" y="-221">
		</location>
		<location id="id41" x="-136" y="-85">
			<name x="-170" y="-119">Idle</name>
		</location>
		<location id="id42" x="-595" y="136">
			<name x="-739" y="136">Executing_task1</name>
		</location>
		<location id="id43" x="51" y="229">
			<name x="84" y="212">Executing_task2</name>
		</location>
		<location id="id44" x="-204" y="-204">
			<name x="-214" y="-238">Adding_task1_toReadyQueue</name>
		</location>
		<location id="id45" x="-272" y="153">
			<name x="-382" y="170">Adding_task2_toReadyQueue</name>
		</location>
		<init ref="id40"/>
		<transition id="id46">
			<source ref="id45"/>
			<target ref="id41"/>
			<nail x="-136" y="153"/>
		</transition>
		<transition id="id47">
			<source ref="id41"/>
			<target ref="id45"/>
			<label kind="guard" x="-459" y="102">core1_t % task2_period == 0 &amp;&amp; findTaskInReadyQueue() != 2</label>
			<label kind="assignment" x="-502" y="119">core1_readyQueue[1] = 1</label>
		</transition>
		<transition id="id48">
			<source ref="id41"/>
			<target ref="id42"/>
			<label kind="guard" x="-518" y="34">findTaskInReadyQueue() == 1</label>
			<label kind="synchronisation" x="-476" y="8">execute_task1!</label>
			<label kind="assignment" x="-527" y="-17">core1_readyQueue[0] = 0</label>
		</transition>
		<transition id="id49">
			<source ref="id44"/>
			<target ref="id41"/>
			<nail x="-195" y="-144"/>
		</transition>
		<transition id="id50">
			<source ref="id41"/>
			<target ref="id44"/>
			<label kind="guard" x="-153" y="-212">core1_t % task1_period == 0 &amp;&amp; findTaskInReadyQueue() != 1</label>
			<label kind="assignment" x="-153" y="-195">core1_readyQueue[0] = 1</label>
			<nail x="-127" y="-161"/>
		</transition>
		<transition id="id51">
			<source ref="id41"/>
			<target ref="id43"/>
			<label kind="guard" x="-8" y="-25">findTaskInReadyQueue() == 2</label>
			<label kind="synchronisation" x="25" y="0">execute_task2!</label>
			<label kind="assignment" x="34" y="17">core1_readyQueue[1] = 0</label>
			<nail x="25" y="17"/>
		</transition>
		<transition id="id52">
			<source ref="id43"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-85" y="127">task2_executed?</label>
			<nail x="-93" y="25"/>
			<nail x="-119" y="-42"/>
		</transition>
		<transition id="id53">
			<source ref="id42"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-739" y="-25">task1_executed?</label>
			<nail x="-595" y="-93"/>
		</transition>
		<transition id="id54">
			<source ref="id41"/>
			<target ref="id41"/>
			<label kind="guard" x="-76" y="-127">core1_t % task1_period != 0 &amp;&amp; core1_t % task2_period != 0 &amp;&amp; findTaskInReadyQueue() == -1</label>
			<label kind="assignment" x="-85" y="-144">core1_t++</label>
			<nail x="-85" y="-59"/>
			<nail x="-85" y="-136"/>
		</transition>
		<transition id="id55">
			<source ref="id40"/>
			<target ref="id41"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
urgent chan execute_task1;
urgent chan execute_task2;

urgent chan task1_arrived;
urgent chan task2_arrived;

urgent chan goBackInReadyQueue_task1;
urgent chan goBackInReadyQueue_task2;


urgent chan task1_executed;
urgent chan task2_executed;

core1 = Core1(execute_task1, execute_task2, goBackInReadyQueue_task1, goBackInReadyQueue_task2, task1_executed, task2_executed, task1_arrived, task2_arrived);
core2 = Core2(execute_task1, execute_task2, goBackInReadyQueue_task1, goBackInReadyQueue_task2, task1_executed, task2_executed, task1_arrived, task2_arrived);


task1 = Task1(execute_task1, execute_task2, goBackInReadyQueue_task1, task1_executed, task2_executed, task2_arrived);
task2 = Task2(execute_task1, execute_task2, goBackInReadyQueue_task2, task1_executed, task2_executed, task1_arrived);

// List one or more processes to be composed into a system.
system core1, task1, task2;
</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment/>
		</query>
	</queries>
</nta>
